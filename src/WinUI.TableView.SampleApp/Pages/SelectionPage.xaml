<Page x:Class="WinUI.TableView.SampleApp.Pages.SelectionPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:WinUI.TableView.SampleApp"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:tv="using:WinUI.TableView"
      xmlns:controls="using:WinUI.TableView.SampleApp.Controls"
      xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
      xmlns:ui="using:CommunityToolkit.WinUI"
      xmlns:converters="using:WinUI.TableView.SampleApp.Converters"
      d:DataContext="{d:DesignInstance Type=local:ExampleViewModel}"
      mc:Ignorable="d">

    <Grid>
        <controls:SamplePresenter Header="Selection"
                                  Description="Showcasing differnet selection options.">
            <controls:SamplePresenter.Example>
                <tv:TableView x:Name="tableView"
                              ItemsSource="{Binding Items}"
                              AutoGeneratingColumn="{x:Bind local:ExampleModelColumnsHelper.OnAutoGeneratingColumns}" />
            </controls:SamplePresenter.Example>
            <controls:SamplePresenter.Options>
                <StackPanel Spacing="16"
                            MaxWidth="350">
                    <ComboBox x:Name="selectionModes"
                              Header="Selection Mode"
                              HorizontalAlignment="Stretch"
                              SelectedItem="{Binding SelectionMode, Mode=TwoWay, ElementName=tableView, Converter={StaticResource EnumToString}}" />
                    <ComboBox Header="Selection Unit"
                              HorizontalAlignment="Stretch"
                              SelectedItem="{Binding SelectionUnit, Mode=TwoWay, ElementName=tableView}"
                              ItemsSource="{ui:EnumValues Type=tv:TableViewSelectionUnit}" />
                    <ToggleSwitch Header="IsReadOnly" 
                                  OnContent="True"
                                  OffContent="False"
                                  IsOn="{Binding IsReadOnly, Mode=TwoWay, ElementName=tableView}"/>
                    <InfoBar IsOpen="True"
                             IsClosable="False"
                             Title="Tip"
                             Message="To hide current cell selection border, try these values:&#x0a;&#x0a;SelectionUnit = Row&#x0a;IsReadOnly = true" />
                </StackPanel>
            </controls:SamplePresenter.Options>
            <controls:SamplePresenter.Xaml>
                <x:String xml:space="preserve">
&lt;tv:TableView x:Name="tableView"
    ItemsSource="{Binding Items}"
    SelectionMode="$(SelectionMode)"
    SelectionUnit="$(SelectionUnit)"
    IsReadOnly="$(IsReadOnly)" /&gt;
                </x:String>
            </controls:SamplePresenter.Xaml>
            <controls:SamplePresenter.Substitutions>
                <controls:CodeSubstitution Key="SelectionMode"
                                           Value="{x:Bind tableView.SelectionMode, Mode=OneWay}" />
                <controls:CodeSubstitution Key="SelectionUnit"
                                           Value="{x:Bind tableView.SelectionUnit, Mode=OneWay}" />
                <controls:CodeSubstitution Key="IsReadOnly"
                                           Value="{x:Bind tableView.IsReadOnly, Mode=OneWay}" />
            </controls:SamplePresenter.Substitutions>
        </controls:SamplePresenter>
    </Grid>
</Page>
